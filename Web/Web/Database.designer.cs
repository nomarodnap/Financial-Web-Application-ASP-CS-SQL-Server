#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Project")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAIncome(AIncome instance);
    partial void UpdateAIncome(AIncome instance);
    partial void DeleteAIncome(AIncome instance);
    partial void InsertExpenditure(Expenditure instance);
    partial void UpdateExpenditure(Expenditure instance);
    partial void DeleteExpenditure(Expenditure instance);
    partial void InsertIncome(Income instance);
    partial void UpdateIncome(Income instance);
    partial void DeleteIncome(Income instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertOutcome(Outcome instance);
    partial void UpdateOutcome(Outcome instance);
    partial void DeleteOutcome(Outcome instance);
    partial void InsertSummary(Summary instance);
    partial void UpdateSummary(Summary instance);
    partial void DeleteSummary(Summary instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ProjectConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AIncome> AIncomes
		{
			get
			{
				return this.GetTable<AIncome>();
			}
		}
		
		public System.Data.Linq.Table<Expenditure> Expenditures
		{
			get
			{
				return this.GetTable<Expenditure>();
			}
		}
		
		public System.Data.Linq.Table<Income> Incomes
		{
			get
			{
				return this.GetTable<Income>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<Outcome> Outcomes
		{
			get
			{
				return this.GetTable<Outcome>();
			}
		}
		
		public System.Data.Linq.Table<Summary> Summaries
		{
			get
			{
				return this.GetTable<Summary>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AIncome")]
	public partial class AIncome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AID;
		
		private System.Nullable<System.DateTime> _ATime;
		
		private string _AType;
		
		private string _AItem;
		
		private System.Nullable<decimal> _ACost;
		
		private string _username;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAIDChanging(int value);
    partial void OnAIDChanged();
    partial void OnATimeChanging(System.Nullable<System.DateTime> value);
    partial void OnATimeChanged();
    partial void OnATypeChanging(string value);
    partial void OnATypeChanged();
    partial void OnAItemChanging(string value);
    partial void OnAItemChanged();
    partial void OnACostChanging(System.Nullable<decimal> value);
    partial void OnACostChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    #endregion
		
		public AIncome()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AID
		{
			get
			{
				return this._AID;
			}
			set
			{
				if ((this._AID != value))
				{
					this.OnAIDChanging(value);
					this.SendPropertyChanging();
					this._AID = value;
					this.SendPropertyChanged("AID");
					this.OnAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ATime
		{
			get
			{
				return this._ATime;
			}
			set
			{
				if ((this._ATime != value))
				{
					this.OnATimeChanging(value);
					this.SendPropertyChanging();
					this._ATime = value;
					this.SendPropertyChanged("ATime");
					this.OnATimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AType", DbType="NVarChar(100)")]
		public string AType
		{
			get
			{
				return this._AType;
			}
			set
			{
				if ((this._AType != value))
				{
					this.OnATypeChanging(value);
					this.SendPropertyChanging();
					this._AType = value;
					this.SendPropertyChanged("AType");
					this.OnATypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AItem", DbType="NVarChar(255)")]
		public string AItem
		{
			get
			{
				return this._AItem;
			}
			set
			{
				if ((this._AItem != value))
				{
					this.OnAItemChanging(value);
					this.SendPropertyChanging();
					this._AItem = value;
					this.SendPropertyChanged("AItem");
					this.OnAItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ACost
		{
			get
			{
				return this._ACost;
			}
			set
			{
				if ((this._ACost != value))
				{
					this.OnACostChanging(value);
					this.SendPropertyChanging();
					this._ACost = value;
					this.SendPropertyChanged("ACost");
					this.OnACostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(15)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_AIncome", Storage="_Member", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.AIncomes.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.AIncomes.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expenditure")]
	public partial class Expenditure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Months;
		
		private System.Nullable<decimal> _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMonthsChanging(string value);
    partial void OnMonthsChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    #endregion
		
		public Expenditure()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="VarChar(23)")]
		public string Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Income")]
	public partial class Income : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Months;
		
		private System.Nullable<decimal> _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMonthsChanging(string value);
    partial void OnMonthsChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    #endregion
		
		public Income()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="VarChar(23)")]
		public string Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private EntitySet<AIncome> _AIncomes;
		
		private EntitySet<Outcome> _Outcomes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Member()
		{
			this._AIncomes = new EntitySet<AIncome>(new Action<AIncome>(this.attach_AIncomes), new Action<AIncome>(this.detach_AIncomes));
			this._Outcomes = new EntitySet<Outcome>(new Action<Outcome>(this.attach_Outcomes), new Action<Outcome>(this.detach_Outcomes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_AIncome", Storage="_AIncomes", ThisKey="username", OtherKey="username")]
		public EntitySet<AIncome> AIncomes
		{
			get
			{
				return this._AIncomes;
			}
			set
			{
				this._AIncomes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Outcome", Storage="_Outcomes", ThisKey="username", OtherKey="username")]
		public EntitySet<Outcome> Outcomes
		{
			get
			{
				return this._Outcomes;
			}
			set
			{
				this._Outcomes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AIncomes(AIncome entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_AIncomes(AIncome entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Outcomes(Outcome entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Outcomes(Outcome entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Outcome")]
	public partial class Outcome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OID;
		
		private System.Nullable<System.DateTime> _OTime;
		
		private string _OType;
		
		private string _OItem;
		
		private System.Nullable<decimal> _OCost;
		
		private string _username;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(int value);
    partial void OnOIDChanged();
    partial void OnOTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOTimeChanged();
    partial void OnOTypeChanging(string value);
    partial void OnOTypeChanged();
    partial void OnOItemChanging(string value);
    partial void OnOItemChanged();
    partial void OnOCostChanging(System.Nullable<decimal> value);
    partial void OnOCostChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    #endregion
		
		public Outcome()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OTime
		{
			get
			{
				return this._OTime;
			}
			set
			{
				if ((this._OTime != value))
				{
					this.OnOTimeChanging(value);
					this.SendPropertyChanging();
					this._OTime = value;
					this.SendPropertyChanged("OTime");
					this.OnOTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OType", DbType="NVarChar(100)")]
		public string OType
		{
			get
			{
				return this._OType;
			}
			set
			{
				if ((this._OType != value))
				{
					this.OnOTypeChanging(value);
					this.SendPropertyChanging();
					this._OType = value;
					this.SendPropertyChanged("OType");
					this.OnOTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OItem", DbType="NVarChar(255)")]
		public string OItem
		{
			get
			{
				return this._OItem;
			}
			set
			{
				if ((this._OItem != value))
				{
					this.OnOItemChanging(value);
					this.SendPropertyChanging();
					this._OItem = value;
					this.SendPropertyChanged("OItem");
					this.OnOItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OCost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OCost
		{
			get
			{
				return this._OCost;
			}
			set
			{
				if ((this._OCost != value))
				{
					this.OnOCostChanging(value);
					this.SendPropertyChanging();
					this._OCost = value;
					this.SendPropertyChanged("OCost");
					this.OnOCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(15)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Outcome", Storage="_Member", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Outcomes.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Outcomes.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Summary")]
	public partial class Summary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Months;
		
		private System.Nullable<decimal> _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMonthsChanging(string value);
    partial void OnMonthsChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    #endregion
		
		public Summary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="VarChar(23)")]
		public string Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
